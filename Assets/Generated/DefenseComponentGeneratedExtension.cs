//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {
    public partial class Entity {
        public DefenseComponent defense { get { return (DefenseComponent)GetComponent(CoreComponentIds.Defense); } }

        public bool hasDefense { get { return HasComponent(CoreComponentIds.Defense); } }

        public Entity AddDefense(int newDefense, int newHealth, int newCurrentHealth, int newFortitude, int newResistance, int newEvasion) {
            var component = CreateComponent<DefenseComponent>(CoreComponentIds.Defense);
            component.defense = newDefense;
            component.health = newHealth;
            component.currentHealth = newCurrentHealth;
            component.fortitude = newFortitude;
            component.resistance = newResistance;
            component.evasion = newEvasion;
            return AddComponent(CoreComponentIds.Defense, component);
        }

        public Entity ReplaceDefense(int newDefense, int newHealth, int newCurrentHealth, int newFortitude, int newResistance, int newEvasion) {
            var component = CreateComponent<DefenseComponent>(CoreComponentIds.Defense);
            component.defense = newDefense;
            component.health = newHealth;
            component.currentHealth = newCurrentHealth;
            component.fortitude = newFortitude;
            component.resistance = newResistance;
            component.evasion = newEvasion;
            ReplaceComponent(CoreComponentIds.Defense, component);
            return this;
        }

        public Entity RemoveDefense() {
            return RemoveComponent(CoreComponentIds.Defense);
        }
    }
}

    public partial class CoreMatcher {
        static IMatcher _matcherDefense;

        public static IMatcher Defense {
            get {
                if(_matcherDefense == null) {
                    var matcher = (Matcher)Matcher.AllOf(CoreComponentIds.Defense);
                    matcher.componentNames = CoreComponentIds.componentNames;
                    _matcherDefense = matcher;
                }

                return _matcherDefense;
            }
        }
    }
