//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {
    public partial class Entity {
        public FakePositionComponent fakePosition { get { return (FakePositionComponent)GetComponent(CoreComponentIds.FakePosition); } }

        public bool hasFakePosition { get { return HasComponent(CoreComponentIds.FakePosition); } }

        public Entity AddFakePosition(int newX, int newY) {
            var component = CreateComponent<FakePositionComponent>(CoreComponentIds.FakePosition);
            component.x = newX;
            component.y = newY;
            return AddComponent(CoreComponentIds.FakePosition, component);
        }

        public Entity ReplaceFakePosition(int newX, int newY) {
            var component = CreateComponent<FakePositionComponent>(CoreComponentIds.FakePosition);
            component.x = newX;
            component.y = newY;
            ReplaceComponent(CoreComponentIds.FakePosition, component);
            return this;
        }

        public Entity RemoveFakePosition() {
            return RemoveComponent(CoreComponentIds.FakePosition);
        }
    }
}

    public partial class CoreMatcher {
        static IMatcher _matcherFakePosition;

        public static IMatcher FakePosition {
            get {
                if(_matcherFakePosition == null) {
                    var matcher = (Matcher)Matcher.AllOf(CoreComponentIds.FakePosition);
                    matcher.componentNames = CoreComponentIds.componentNames;
                    _matcherFakePosition = matcher;
                }

                return _matcherFakePosition;
            }
        }
    }

    public partial class TilesMatcher {
        static IMatcher _matcherFakePosition;

        public static IMatcher FakePosition {
            get {
                if(_matcherFakePosition == null) {
                    var matcher = (Matcher)Matcher.AllOf(TilesComponentIds.FakePosition);
                    matcher.componentNames = TilesComponentIds.componentNames;
                    _matcherFakePosition = matcher;
                }

                return _matcherFakePosition;
            }
        }
    }
